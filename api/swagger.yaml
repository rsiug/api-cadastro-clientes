---
swagger: "2.0"
info:
  description: "Servidor de com API para o gerenciamento de clientes."
  version: "1.0.0"
  title: "Swagger Gerenciamento de Clientes"
  contact:
    email: "guilherme.siqueira.rodrigues@outlook.com"
basePath: "/v1"
tags:
- name: "clientes"
  description: "API referente a gerenciamento de clientes"
schemes:
- "http"
- "https"
paths:
  /clientes:
    get:
      tags:
      - "clientes"
      summary: "Retorna todos os clientes cadastrados"
      operationId: "getClientes"
      produces:
      - "application/json"
      parameters:
      - name: "quantidade"
        in: "query"
        description: "Quantidade de clientes a serem retornados"
        required: false
        type: "integer"
      responses:
        200:
          description: "Sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/cliente"
        default:
          description: "Erro não esperado"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Clientes"
    post:
      tags:
      - "clientes"
      summary: "Insere um novo cliente"
      operationId: "addCliente"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "cliente"
        description: "Objeto cliente para inserção"
        required: true
        schema:
          $ref: "#/definitions/newCliente"
      responses:
        200:
          description: "Sucesso"
        default:
          description: "Erro não esperado"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "Clientes"
  /clientes/{id}:
    get:
      tags:
      - "clientes"
      summary: "Busca um cliente pelo ID"
      description: "Retorna um único cliente"
      operationId: "getCliente"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID do cliente a ser retornado"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
          schema:
            $ref: "#/definitions/cliente"
        400:
          description: "ID inválido"
        404:
          description: "Cliente não encontrado"
      x-swagger-router-controller: "Clientes"
    put:
      tags:
      - "clientes"
      summary: "Atualiza um cliente a partir dos dados do formulário"
      description: "Altera um cliente"
      operationId: "updateCliente"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID do cliente a ser atualizado"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "cliente"
        description: "Objeto cliente para atualização"
        required: true
        schema:
          $ref: "#/definitions/newCliente"
      responses:
        200:
          description: "Sucesso"
        404:
          description: "Cliente invalido"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Clientes"
    delete:
      tags:
      - "clientes"
      summary: "Exclui um cliente a partir do ID"
      description: "Remove um cliente"
      operationId: "deleteCliente"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID do cliente que será excluído"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso"
        400:
          description: "ID invalido"
        404:
          description: "Cliente não encontrado"
      x-swagger-router-controller: "Clientes"
definitions:
  cliente:
    type: "object"
    required:
    - "dataNascimento"
    - "filhos"
    - "id"
    - "nome"
    properties:
      id:
        type: "integer"
        format: "int64"
      nome:
        type: "string"
        example: "João"
      filhos:
        type: "integer"
        example: 2
      endereco:
        type: "string"
        example: "Rua dos Ciprestes, 123"
      dataNascimento:
        type: "string"
    example:
      endereco: "Rua dos Ciprestes, 123"
      nome: "João"
      id: 0
      filhos: 2
      dataNascimento: "1988-01-01"
  newCliente:
    type: "object"
    required:
    - "dataNascimento"
    - "filhos"
    - "nome"
    properties:
      nome:
        type: "string"
        example: "João"
      filhos:
        type: "integer"
        example: 2
      endereco:
        type: "string"
        example: "Rua dos Ciprestes, 123"
      dataNascimento:
        type: "string"
    example:
      endereco: "Rua dos Ciprestes, 123"
      nome: "João"
      filhos: 2
      dataNascimento: "1988-01-01"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
